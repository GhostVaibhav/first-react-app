{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","onClick","changeLink","homeText","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","link","aria-current","aboutText","style","display","changeColor","toggleMode","htmlFor","modeText","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","toUpperCase","length","alert","toLowerCase","newText","split","i","charAt","slice","join","navigator","clipboard","writeText","replace","Math","round","About","defaultProps","Alert","s","role","message","App","setMode","setModeText","setAlert","setLink","showAlert","setTimeout","basename","process","document","body","backgroundColor","color","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ac866a12.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav\r\n            className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n        >\r\n            <div className=\"container-fluid\">\r\n                <Link\r\n                    className=\"navbar-brand\"\r\n                    to=\"/\"\r\n                    onClick={() => {\r\n                        props.changeLink(props.homeText);\r\n                    }}\r\n                >\r\n                    {props.title}\r\n                </Link>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div\r\n                    className=\"collapse navbar-collapse\"\r\n                    id=\"navbarSupportedContent\"\r\n                >\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                className={`nav-link ${\r\n                                    props.link === props.homeText\r\n                                        ? \"active\"\r\n                                        : \"\"\r\n                                }`}\r\n                                aria-current=\"page\"\r\n                                to=\"/\"\r\n                                onClick={() => {\r\n                                    props.changeLink(props.homeText);\r\n                                }}\r\n                            >\r\n                                {props.homeText}\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                className={`nav-link ${\r\n                                    props.link === props.aboutText\r\n                                        ? \"active\"\r\n                                        : \"\"\r\n                                }`}\r\n                                to=\"/about\"\r\n                                onClick={() => {\r\n                                    props.changeLink(props.aboutText);\r\n                                }}\r\n                            >\r\n                                {props.aboutText}\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    <div\r\n                        className=\"color-palette\"\r\n                        style={{\r\n                            display: props.mode === \"dark\" ? \"flex\" : \"none\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className=\"color-box red\"\r\n                            onClick={() => {\r\n                                props.changeColor(\"#821409\");\r\n                            }}\r\n                        ></div>\r\n                        <div\r\n                            className=\"color-box green\"\r\n                            onClick={() => {\r\n                                props.changeColor(\"#347841\");\r\n                            }}\r\n                        ></div>\r\n                        <div\r\n                            className=\"color-box blue\"\r\n                            onClick={() => {\r\n                                props.changeColor(\"#064f94\");\r\n                            }}\r\n                        ></div>\r\n                    </div>\r\n                    <div\r\n                        className={`form-check form-switch mx-3 text-${\r\n                            props.mode === \"light\" ? \"dark\" : \"light\"\r\n                        }`}\r\n                    >\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            id=\"flexSwitchCheckDefault\"\r\n                            onClick={props.toggleMode}\r\n                        />\r\n                        <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor=\"flexSwitchCheckDefault\"\r\n                        >\r\n                            {props.modeText}\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    homeText: PropTypes.string,\r\n    aboutText: PropTypes.string,\r\n};\r\nNavbar.defaultProps = {\r\n    title: \"My Title\",\r\n    homeText: \"Home\",\r\n    aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n    const upperText = () => {\r\n        setText(text.toUpperCase());\r\n        if (text.length > 0) props.alert(\"Converted to Uppercase!\", \"success\");\r\n    };\r\n    const lowerText = () => {\r\n        setText(text.toLowerCase());\r\n        if (text.length > 0) props.alert(\"Converted to Lowercase!\", \"success\");\r\n    };\r\n    const changeText = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n    const clearText = () => {\r\n        setText(\"\");\r\n        if (text.length > 0) props.alert(\"Cleared text\", \"success\");\r\n    };\r\n    const capitalText = () => {\r\n        let newText = text.split(\" \");\r\n        for (let i = 0; i < newText.length; i++) {\r\n            newText[i] =\r\n            newText[i].charAt(0).toUpperCase() + newText[i].slice(1);\r\n        }\r\n        setText(newText.join(\" \"));\r\n        if (text.length > 0) props.alert(\"Converted to Capital Case!\", \"success\");\r\n    };\r\n    const copyText = () => {\r\n        navigator.clipboard.writeText(text);\r\n        if (text.length > 0) props.alert(\"Copied text!\", \"success\");\r\n    };\r\n    const removeExtraSpaces = () => {\r\n        setText(text.replace(/\\s\\s+/g, \" \"));\r\n        if (text.length > 0) props.alert(\"Removed extra spaces!\", \"success\");\r\n    };\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div\r\n                className={`container text-${\r\n                    props.mode === \"light\" ? \"dark\" : \"light\"\r\n                }`}\r\n            >\r\n                <h1 className=\"my-3\">{props.heading}</h1>\r\n                <div className=\"mb-3 my-3\">\r\n                    <textarea\r\n                        className={`form-control bg-${props.mode} text-${\r\n                            props.mode === \"light\" ? \"dark\" : \"light\"\r\n                        }`}\r\n                        value={text}\r\n                        onChange={changeText}\r\n                        id=\"my-box\"\r\n                        rows=\"8\"\r\n                    ></textarea>\r\n                </div>\r\n                <button\r\n                    className={`btn btn-outline-${\r\n                        props.mode === \"light\" ? \"dark\" : \"light\"\r\n                    } mx-1 my-2`}\r\n                    onClick={upperText}\r\n                >\r\n                    Convert To Uppercase\r\n                </button>\r\n                <button\r\n                    className={`btn btn-outline-${\r\n                        props.mode === \"light\" ? \"dark\" : \"light\"\r\n                    } mx-1 my-2`}\r\n                    onClick={lowerText}\r\n                >\r\n                    Convert To Lowercase\r\n                </button>\r\n                <button\r\n                    className={`btn btn-outline-${\r\n                        props.mode === \"light\" ? \"dark\" : \"light\"\r\n                    } mx-1 my-2`}\r\n                    onClick={capitalText}\r\n                >\r\n                    Convert To Capital Case\r\n                </button>\r\n                <button\r\n                    className={`btn btn-outline-${\r\n                        props.mode === \"light\" ? \"dark\" : \"light\"\r\n                    } mx-1 my-2`}\r\n                    onClick={copyText}\r\n                >\r\n                    Copy Text\r\n                </button>\r\n                <button\r\n                    className={`btn btn-outline-${\r\n                        props.mode === \"light\" ? \"dark\" : \"light\"\r\n                    } mx-1 my-2`}\r\n                    onClick={removeExtraSpaces}\r\n                >\r\n                    Remove Extra Spaces\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-outline-danger mx-1 my-2\"\r\n                    onClick={clearText}\r\n                >\r\n                    Clear Text\r\n                </button>\r\n            </div>\r\n            <div\r\n                className={`container text-${\r\n                    props.mode === \"light\" ? \"dark\" : \"light\"\r\n                }`}\r\n            >\r\n                <h2 className=\"my-3\">Text analysis</h2>\r\n                <p>\r\n                    {text.length ? text.split(\" \").length : 0} words and{\" \"}\r\n                    {text.length} characters written\r\n                </p>\r\n                <p>\r\n                    Time taken to read the sentence (in seconds) :{\" \"}\r\n                    {Math.round(\r\n                        (text.length ? text.split(\" \").length : 0) * 0.008 * 60\r\n                    )}\r\n                </p>\r\n                <h2 className=\"my-3\">Preview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1\r\n                className={`text-${\r\n                    props.mode === \"light\" ? \"dark\" : \"light\"\r\n                } my-3`}\r\n            >\r\n                About Us\r\n            </h1>\r\n            <p\r\n                className={`text-${\r\n                    props.mode === \"light\" ? \"dark\" : \"light\"\r\n                } my-3`}\r\n            >\r\n                This is a website which was made for the sole intent of learning\r\n                React!\r\n            </p>\r\n            <footer>\r\n                <h4\r\n                    className={`text-${\r\n                        props.mode === \"light\" ? \"dark\" : \"light\"\r\n                    } my-3 text-center`}\r\n                >\r\n                    Created By Vaibhav Sharma\r\n                </h4>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n    return (\r\n        props.alert && <div>\r\n            <div\r\n                className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n                role=\"alert\"\r\n            >\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.message}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n    const [mode, setMode] = useState(\"light\");\n    const [modeText, setModeText] = useState(\"Enable Dark Mode\");\n    const [alert, setAlert] = useState(null);\n    const [link, setLink] = useState('Home');\n    const showAlert = (message, type) => {\n        setAlert({\n            message: message,\n            type: type,\n        });\n        setTimeout(() => {\n            setAlert(null);\n        }, 1500);\n    };\n    const toggleMode = () => {\n        if (mode === \"light\") {\n            setModeText(\"Disable Dark Mode\");\n            setMode(\"dark\");\n            document.body.style.backgroundColor = \"#303538\";\n            showAlert(\"Dark mode has been enabled!\", \"success\");\n        } else {\n            setModeText(\"Enable Dark Mode\");\n            setMode(\"light\");\n            document.body.style.backgroundColor = \"white\";\n            showAlert(\"Dark mode has been disabled!\", \"success\");\n        }\n    };\n    const changeColor = (color) => {\n        document.body.style.backgroundColor = color;\n        showAlert(\"Background Color has been changed!\", \"info\");\n    };\n    const changeLink = (link) => {\n        setLink(link);\n    }\n    return (\n        <>\n        <Router basename={process.env.PUBLIC_URL}>\n            <Navbar\n                title=\"TextUtils\"\n                homeText=\"Home\"\n                aboutText=\"About\"\n                modeText={modeText}\n                mode={mode}\n                toggleMode={toggleMode}\n                changeColor={changeColor}\n                link={link}\n                changeLink={changeLink}\n            />\n            <Alert alert={alert} />\n            <div className=\"container\">\n                <Switch>\n                    <Route exact path=\"/about\">\n                        <About mode={mode}/>\n                    </Route>\n                    <Route exact path=\"/\">\n                        <TextForm\n                            heading=\"Enter the text to analyze\"\n                            mode={mode}\n                            alert={showAlert}\n                        />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}